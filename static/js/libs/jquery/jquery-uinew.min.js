function LunarDate(a, b, c, d, e) { this.day = a, this.month = b, this.year = c, this.leap = d, this.jd = e } function INT(a) { return Math.floor(a) } function jdn(a, b, c) { var d = INT((14 - b) / 12), e = c + 4800 - d, f = b + 12 * d - 3, g = a + INT((153 * f + 2) / 5) + 365 * e + INT(e / 4) - INT(e / 100) + INT(e / 400) - 32045; return g } function jdn2date(a) { var b, c, d, e, f, g, h, i, j, k; return b = a, b < 2299161 ? c = b : (d = INT((b - 1867216.25) / 36524.25), c = b + 1 + d - INT(d / 4)), e = c + 1524, f = INT((e - 122.1) / 365.25), g = INT(365.25 * f), h = INT((e - g) / 30.6001), i = INT(e - g - INT(30.6001 * h)), j = h < 14 ? h - 1 : h - 13, k = j < 3 ? f - 4715 : f - 4716, new Array(i, j, k) } function decodeLunarYear(a, b) { var c, d, e, f, g, h, j, k, l, m = new Array; for (c = new Array(29, 30), d = new Array(12), e = b >> 17, f = 15 & b, g = c[b >> 16 & 1], h = jdn(1, 1, a), j = h + e, k = b >> 4, i = 0; i < 12; i++) d[12 - i - 1] = c[1 & k], k >>= 1; if (0 == f) for (l = 1; l <= 12; l++) m.push(new LunarDate(1, l, a, 0, j)), j += d[l - 1]; else { for (l = 1; l <= f; l++) m.push(new LunarDate(1, l, a, 0, j)), j += d[l - 1]; for (m.push(new LunarDate(1, f, a, 1, j)), j += g, l = f + 1; l <= 12; l++) m.push(new LunarDate(1, l, a, 0, j)), j += d[l - 1] } return m } function getYearInfo(a) { var b; return b = a < 1900 ? TK19[a - 1800] : a < 2e3 ? TK20[a - 1900] : a < 2100 ? TK21[a - 2e3] : TK22[a - 2100], decodeLunarYear(a, b) } function findLunarDate(a, b) { if (a > LAST_DAY || a < FIRST_DAY || b[0].jd > a) return new LunarDate(0, 0, 0, 0, a); for (var c = b.length - 1; a < b[c].jd;) c--; var d = a - b[c].jd; return ret = new LunarDate(b[c].day + d, b[c].month, b[c].year, b[c].leap, a), ret } function getLunarDate(a, b, c) { var d, e; return d = getYearInfo(c), e = jdn(a, b, c), e < d[0].jd && (d = getYearInfo(c - 1)), findLunarDate(e, d) } function parseQuery(a) { var b = new Array; if (a.length < 2) return b; var e, f, c = a.substring(1, a.length), d = c.split("&"); for (e = 0; e < d.length; e++) { var g = d[e].split("="); for (f = 0; f < g.length; f++) b.push(g[f]) } return b } function getSelectedMonth() { var c, a = window.location.search, b = parseQuery(a); for (c = 0; c < b.length; c++) "mm" == b[c] ? currentMonth = parseInt(b[c + 1]) : "yy" == b[c] && (currentYear = parseInt(b[c + 1])) } function getMonth(a, b) { var c, d, e, f, g, h, i, j, k; if (a < 12 ? (h = a + 1, i = b) : (h = 1, i = b + 1), f = jdn(1, a, b), g = jdn(1, h, i), c = getYearInfo(b), e = c[0].jd, j = new Array, e <= f) for (k = f; k < g; k++) j.push(findLunarDate(k, c)); else if (f < e && g < e) for (c = getYearInfo(b - 1), k = f; k < g; k++) j.push(findLunarDate(k, c)); else if (f < e && e <= g) { for (d = getYearInfo(b - 1), k = f; k < e; k++) j.push(findLunarDate(k, d)); for (k = e; k < g; k++) j.push(findLunarDate(k, c)) } return j } function getDayName(a) { if (0 == a.day) return ""; var b = getCanChi(a), c = "Ngày " + b[0] + ", tháng " + b[1] + ", năm " + b[2]; return c } function getYearCanChi(a) { return CAN[(a + 6) % 10] + " " + CHI[(a + 8) % 12] } function getCanChi(a) { var b, c, d; return b = CAN[(a.jd + 9) % 10] + " " + CHI[(a.jd + 1) % 12], c = CAN[(12 * a.year + a.month + 3) % 10] + " " + CHI[(a.month + 1) % 12], 1 == a.leap && (c += " (nhuận)"), d = getYearCanChi(a.year), new Array(b, c, d) } function getDayString(a, b, c, d) { var e, f = TUAN[(a.jd + 1) % 7]; return e = f + " " + b + "/" + c + "/" + d, e += " -+- ", e = e + "Ngày " + a.day + " tháng " + a.month, 1 == a.leap && (e += " nhuận"), e } function getTodayString() { var a = getDayString(currentLunarDate, today.getDate(), today.getMonth() + 1, today.getFullYear()); return a += " năm " + getYearCanChi(currentLunarDate.year) } function getCurrentTime() { today = new Date; var a = today.getHours(), b = today.getMinutes(), d = (today.getSeconds(), a < 10 ? "0" + a : a), e = b < 10 ? "0" + b : b; return d + ":" + e } function getGioHoangDao(a) { for (var b = (a + 1) % 12, c = GIO_HD[b % 6], d = "", e = 0, f = 0; f < 12; f++) "1" == c.charAt(f) && (d += CHI[f], e++ < 5 && (d += ", ")); return d } function OutputOptions() { this.fontSize = "13pt", this.tableWidth = "420px" } function setOutputSize(a) { var b = 1; b = "small" == a ? 0 : "big" == a ? 2 : 1, PRINT_OPTS.fontSize = FONT_SIZES[b], PRINT_OPTS.tableWidth = TAB_WIDTHS[b] } function printSelectedMonth() { return getSelectedMonth(), printMonth(currentMonth, currentYear) } function printMonth(a, b) { var c = ""; return c += printStyle(), c += printTable(a, b), c += printFoot() } function printYear(a) { var b = "N&#x103;m " + getYearCanChi(a) + " " + a, c = ""; c += printStyle(), c += "<table align=center>\n", c += '<tr><td colspan="3" class="tennam" onClick="showYearSelect();">' + b + "</td></tr>\n"; for (var d = 1; d <= 12; d++) d % 3 == 1 && (c += "<tr>\n"), c += "<td>\n", c += printTable(d, a), c += "</td>\n", d % 3 == 0 && (c += "</tr>\n"); return c += "<table>\n", c += printFoot() } function printSelectedYear() { return getSelectedMonth(), printYear(currentYear) } function printStyle() { var a = PRINT_OPTS.fontSize, b = ""; return b += '<style type="text/css">\n', b += "<!--\n", b += "  .tennam {text-align:center; font-size:125%; line-height:100%; font-weight:bold; color:#000000; background-color: #CCCCCC}\n", b += "  .thang {font-size: " + a + "; padding:1; line-height:80%; font-family:Times New Roman,Verdana,Arial; table-layout:fixed}\n", b += "  .tenthang {text-align:center; font-size:95%; line-height:90%; font-weight:bold; color:#330033; background-color: #CCFFCC}\n", b += "  .navi-l {text-align:center; font-size:55%; line-height:90%; font-family:Verdana,Times New Roman,Arial; font-weight:bold; color:red; background-color: #CCFFCC}\n", b += "  .navi-r {text-align:center; font-size:55%; line-height:90%; font-family:Verdana,Arial,Times New Roman; font-weight:bold; color:#330033; background-color: #CCFFCC}\n", b += "  .ngaytuan {width:14%; text-align:center; font-size:90%; line-height:90%; color:#330033; background-color: #FFFFCC}\n", b += "  .ngaythang {background-color:#D0DDF0}\n", b += "  .homnay {background-color:#FFF000}\n", b += "  .tet {background-color:#FFCC99}\n", b += "  .am {text-align:right;font-size:75%;line-height:90%;color:red}\n", b += "  .am2 {text-align:right;font-size:75%;line-height:90%;color:#004080}\n", b += "  .t2t6 {text-align:left;font-size:100%;color:black}\n", b += "  .t7 {text-align:left;font-size:100%;line-height:90%;color:green}\n", b += "  .cn {text-align:left;font-size:100%;line-height:90%;color:red}\n", b += "-->\n", b += "</style>\n" } function printTable(a, b) { var c, d, e, f, k = getMonth(a, b); if (0 != k.length) { var l = k[0], m = (l.jd + 1) % 7, p = (getYearCanChi(l.year), ""); for (p += '<table class="thang" border="1" bgcolor="#D0DDF0" cellpadding="0" cellspacing="0" width="' + PRINT_OPTS.tableWidth + '">\n', p += printHead(a, b), c = 0; c < 6; c++) { for (p += "<tr>\n", d = 0; d < 7; d++) e = 7 * c + d, e < m || e >= m + k.length ? p += printEmptyCell() : (f = e - m + 1, l = k[e - m], p += printCell(l, f, a, b)); p += "</tr>\n" } return p += "</table>\n" } } function getPrevMonthLink(a, b) { var c = a > 1 ? a - 1 : 12, d = a > 1 ? b : b - 1; return '<a href="' + window.location.pathname + "?yy=" + d + "&mm=" + c + '">&lt;</a>' } function getNextMonthLink(a, b) { var c = a < 12 ? a + 1 : 1, d = a < 12 ? b : b + 1; return '<a href="' + window.location.pathname + "?yy=" + d + "&mm=" + c + '">&gt;</a>' } function getPrevYearLink(a, b) { return '<a href="' + window.location.pathname + "?yy=" + (b - 1) + "&mm=" + a + '">&lt;&lt;</a>' } function getNextYearLink(a, b) { return '<a href="' + window.location.pathname + "?yy=" + (b + 1) + "&mm=" + a + '">&gt;&gt;</a>' } function printHead(a, b) { var c = "", d = a + "/" + b; c += '<tr><td colspan="2" class="navi-l">' + getPrevYearLink(a, b) + " &nbsp;" + getPrevMonthLink(a, b) + "</td>\n", c += '<td colspan="3" class="tenthang" onClick="showMonthSelect();">' + d + "</td>\n", c += '<td colspan="2" class="navi-r">' + getNextMonthLink(a, b) + " &nbsp;" + getNextYearLink(a, b) + "</td></tr>\n", c += '<tr onClick="alertAbout();">\n'; for (var e = 0; e <= 6; e++) c += "<td class=ngaytuan>" + DAYNAMES[e] + "</td>\n"; return c += "</tr>\n" } function printEmptyCell() { return "<td class=ngaythang><div class=cn>&nbsp;</div> <div class=am>&nbsp;</div></td>\n" } function printCell(a, b, c, d) { var e, f, g, h; e = "ngaythang", f = "t2t6", g = "am", h = "black"; var i = (a.jd + 1) % 7; 0 == i ? (f = "cn", h = "red") : 6 == i && (f = "t7", h = "green"), b == today.getDate() && c == today.getMonth() + 1 && d == today.getFullYear() && (e = "homnay"), 1 == a.day && 1 == a.month && (e = "tet"), 1 == a.leap && (g = "am2"); var j = a.day; 1 != b && 1 != j || (j = a.day + "/" + a.month); var k = "", l = a.day + "," + a.month + "," + a.year + "," + a.leap; return l += "," + a.jd + "," + b + "," + c + "," + d, k += '<td class="' + e + '"', null != a && (k += ' title="' + getDayName(a) + '" onClick="alertDayInfo(' + l + ');"'), k += " <div style=color:" + h + ' class="' + f + '">' + b + '</div> <div class="' + g + '">' + j + "</div></td>\n" } function printFoot() { var a = ""; return a += '<script language="JavaScript" src="amlich-hnd.js"></script>\n' } function showMonthSelect() { var a = "http://www.ifis.uni-luebeck.de/~duc/amlich/JavaScript/"; window.open(a, "win2702", "menubar=yes,scrollbars=yes,status=yes,toolbar=yes,resizable=yes,location=yes") } function showYearSelect() { window.print() } function infoCellSelect(a) { } function alertDayInfo(a, b, c, d, e, f, g, h) { var i = new LunarDate(a, b, c, d, e), j = getDayString(i, f, g, h); j += " âm lịch\n", j += getDayName(i), j += "\nGiờ hoàng đạo: " + getGioHoangDao(e), alert(j) } function alertAbout() { alert(ABOUT) } function showVietCal() { window.status = getCurrentTime() + " -+- " + getTodayString(), window.window.setTimeout("showVietCal()", 5e3) } var ABOUT = "Âm lịch Việt Nam - Version 0.5\n© 2004 Hồ Ngọc Đức [http://come.to/duc]", TK19 = new Array(3193507, 5679952, 4336544, 2927457, 5415792, 3953128, 6345056, 4908208, 3631398, 5823136, 4479824, 3217106, 5647072, 4104928, 2679506, 5163344, 3724630, 6075680, 4634256, 3300772, 5789136, 4335056, 2926003, 5415600, 4040887, 6334800, 4895904, 3519141, 5942608, 4478384, 3156852, 5645680, 4215545, 6574768, 5138768, 3698006, 6183584, 4631376, 3299028, 5786336, 4367728, 2966867, 5296800, 3926183, 6346064, 4872864, 3452325, 5936592, 4606688, 3058356, 5547216, 4117176, 6599312, 5027152, 3692375, 6172064, 4756944, 3296629, 5786032, 4367536, 2991283, 5270160, 3845528, 6318928, 4991840, 3511141, 5935984, 4606320, 3172708, 5432480, 3992170, 6478480, 5135056, 3746518, 6171360, 4756192, 3328725, 5687632, 4248736, 2872483, 5289616, 3823527, 6313392, 4990416, 3577269, 5935792, 4499792, 3070292, 5551264, 3978576, 2648914, 5133744, 3811190, 6169968, 4739760, 3320485, 5695824, 4221600, 2800291, 5286736), TK20 = new Array(3951576, 6441696, 5023088, 3691733, 6083168, 4512080, 3233108, 5658272, 4233936, 2774482, 5262048, 3843510, 6333648, 4772432, 3396181, 5813568, 4380320, 2928034, 5412272, 4147575, 6572400, 5022896, 3585205, 6056528, 4615488, 3124052, 5647200, 4232560, 2904818, 5261680, 3827046, 6214816, 4778576, 3369621, 5790416, 4467552, 3114723, 5411552, 4049111, 6474064, 5035168, 3528870, 5944656, 4609696, 3253684, 5645776, 4231888, 2806450, 5286224, 3716439, 6188192, 4765008, 3494741, 5787040, 4367792, 3097971, 5526192, 3975592, 6351184, 5008032, 3583654, 5942096, 4606816, 3189476, 5678448, 4215392, 2683491, 5167424, 3726151, 6084256, 4757200, 3427797, 5917392, 4367568, 2938036, 5419600, 3986776, 6337856, 4896160, 3626406, 6067632, 4606384, 3189108, 5678256, 4237904, 2730578, 5139744, 3779911, 6204256, 4756336, 3427061, 5917040, 4482224, 2913443, 5302864, 4024920, 6444704, 4893392, 3577557, 6066912), TK21 = new Array(4639072, 3070292, 5559456, 4119120, 2782546, 5133984, 3712935, 6202832, 4887216, 3320501, 5810512, 4371616, 2931364, 5287248, 3954137, 6441888, 5023152, 3625334, 6050416, 4614448, 3176756, 5532320, 4107600, 2775890, 5262176, 3712742, 6202592, 4772448, 3336805, 5690656, 4250272, 2971299, 5396176, 3951355, 6441424, 5022928, 3657910, 5943888, 4502816, 3071269, 5551520, 4085200, 2774450, 5261744, 3843447, 6202544, 4762192, 3387989, 5795104, 4238688, 2968419, 5395312, 4082152, 6343024, 5002416, 3631270, 5954128, 4479648, 3122852, 5548752, 4215520, 2675427, 5163344, 3724631, 6214816, 4643152, 3300693, 5789344, 4368080, 2905556, 5395120, 3975608, 6465840, 4895888, 3454630, 5942608, 4609440, 3058532, 5547376, 4215472, 2797939, 5138736, 3697463, 6187680, 4762960, 3353301, 5778272, 4367728, 3035876, 5296480, 3860824, 6346016, 4905616, 3496614, 5920464, 4598496, 3189204, 5546704, 4116816, 2681170), TK22 = new Array(5158176, 3725095, 6204832, 4871600, 3550645, 5916080, 4498096, 3060404, 5548368, 3978585, 6449952, 5025104, 3692390, 6050672, 4736368, 3302772, 5788336, 4221264, 2783571, 5266080, 3910311, 6203088, 4868832, 3515109, 5940560, 4379296, 3007140, 5428560, 4086459, 6444704, 5019344, 3754422, 6179504, 4630736, 3200181, 5681808, 4240720, 2780498, 5262752, 3904871, 6329712, 4868528, 3451253, 5924016, 4483728, 2931348, 5401424, 4074336, 2665313, 5018992, 3689190, 6082912, 4646048, 3075365, 5560976, 4217680, 2897619, 5253856, 3838935, 6329040, 4901200, 3331414, 5813408, 4372112, 3038612, 5395888, 4072954, 6563248, 5149360, 3582646, 6056272, 4617376, 3256997, 5549392, 4216224, 2796403, 5383536, 3822455, 6312624, 4876624, 3435862, 5790368, 4369232, 3036884, 5524192, 3974512, 2647250, 5034592, 3599014, 5952848, 4610720, 3190181, 5674448, 4213456, 2795955, 5285072, 3855031, 6206032, 4764992, 3396950), CAN = new Array("Giáp", "Ất", "Bính", "Đinh", "Mậu", "Kỷ", "Canh", "Tân", "Nhâm", "Quý"), CHI = new Array("Tý", "Sửu", "Dần", "Mão", "Thìn", "Tỵ", "Ngọ", "Mùi", "Thân", "Dậu", "Tuất", "Hợi"), TUAN = new Array("Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy"), GIO_HD = new Array("110100101100", "001101001011", "110011010010", "101100110100", "001011001101", "010010110011"), FIRST_DAY = jdn(25, 1, 1800), LAST_DAY = jdn(31, 12, 2199), today = new Date, currentLunarDate = getLunarDate(today.getDate(), today.getMonth() + 1, today.getFullYear()), currentMonth = today.getMonth() + 1, currentYear = today.getFullYear(), DAYNAMES = new Array("CN", "T2", "T3", "T4", "T5", "T6", "T7"), PRINT_OPTS = new OutputOptions, FONT_SIZES = new Array("9pt", "13pt", "17pt"), TAB_WIDTHS = new Array("180px", "420px", "600px");